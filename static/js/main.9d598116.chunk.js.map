{"version":3,"sources":["components/NavBar.tsx","store/actions.ts","components/LoadingComponent.tsx","App.tsx","theme.ts","serviceWorker.ts","store/index.ts","store/configureStore.prod.ts","components/ReduxDevTools.tsx","index.tsx","store/configureStore.ts"],"names":["HomeLink","props","react_default","a","createElement","Link","Object","assign","style","textDecoration","to","ResumeLink","HomepageLink","RCVLink","GreenLanesLink","createHandlers","dispatch","handleMenu","event","anchor","currentTarget","action","handleClose","NavBar","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handlers","_this$props","classes","children","projectMenuAnchor","navList","List_default","ListItem_default","button","TouchRippleProps","root","rippleColor","key","component","className","darkBlueHover","ListItemText_default","primary","navText","CssBaseline_default","Hidden_default","smUp","implementation","AppBar_default","position","appBar","Toolbar_default","Typography_default","variant","color","noWrap","title","Button_default","aria-owns","undefined","aria-haspopup","onClick","mono","label","Menu_default","id","anchorEl","open","Boolean","onClose","menu","MenuItem_default","lightBlueHover","disableRipple","noHover","drawer","xsDown","Drawer_default","paper","drawerPaper","padding","content","toolbar","React","Component","withRouter","connect","state","navbar","withStyles","theme","_appBar","createStyles","display","defineProperty","breakpoints","up","width","flexShrink","marginLeft","concat","menuButton","marginRight","mixins","background","palette","main","contrastText","fontFamily","typography","monoFonts","textTransform","textAlign","flexGrow","secondary","&:hover","dark","light","backgroundColor","noLinkVisibility","spacing","unit","LoadingComponent","_ref","isLoading","error","options","join","sansSerifFonts","createMuiTheme","objectSpread","appDrawer","breakpoint","type","useNextVariants","caption","h1","h2","h3","h4","h5","h6","body1","fontSize","body2","fontStyle","createTheme","AsyncHome","Loadable","loader","__webpack_require__","e","then","bind","loading","AsyncResume","AsyncHomepage","AsyncRCV","AsyncGreenLanes","Promise","all","App","es","store","BrowserRouter","core_styles","components_NavBar","Switch","Route","path","exact","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","initialState","combineReducers","basic","arguments","length","payload","configureStore","preloadedState","createStore","rootReducer","applyMiddleware","createDevTools","redux_devtools_dock_monitor_lib_default","toggleVisibilityKey","changePositionKey","redux_devtools_log_monitor_lib_default","prod","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9d598116.chunk.js","sourcesContent":["import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Theme, createStyles } from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { openMenu, closeMenu } from \"../store/actions\";\nimport { ApplicationState } from \"../store\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\ndeclare interface MenuEvent extends React.MouseEvent<HTMLElement> {\n  currentTarget: EventTarget & HTMLElement;\n}\n\ndeclare interface Props {\n  dispatch: any;\n  classes?: any;\n  theme?: Theme;\n  children?: any;\n  projectMenuAnchor: null | HTMLElement;\n}\n\nconst drawerWidth = 240;\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\"\n    },\n    drawer: {\n      [theme.breakpoints.up(\"sm\")]: {\n        width: drawerWidth,\n        flexShrink: 0\n      }\n    },\n    appBar: {\n      marginLeft: drawerWidth,\n      [theme.breakpoints.up(\"sm\")]: {\n        width: `calc(100% - ${drawerWidth}px)`\n      },\n\n      flexGrow: 1\n    },\n    menuButton: {\n      marginRight: 20,\n      [theme.breakpoints.up(\"sm\")]: {\n        display: \"none\"\n      }\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n      background: theme.palette.primary.main,\n      width: drawerWidth\n    },\n    navText: {\n      color: theme.palette.primary.contrastText,\n      fontFamily: theme.typography.monoFonts\n    },\n    mono: {\n      fontFamily: theme.typography.monoFonts\n    },\n    label: {\n      textTransform: \"capitalize\"\n    },\n    title: {\n      textAlign: \"left\",\n      flexGrow: 1\n    },\n    rippleColor: {\n      color: theme.palette.secondary.main\n    },\n    darkBlueHover: {\n      \"&:hover\": {\n        background: theme.palette.secondary.dark\n      }\n    },\n    lightBlueHover: {\n      \"&:hover\": {\n        background: theme.palette.secondary.light\n      }\n    },\n    noHover: {\n      \"&:hover\": {\n        backgroundColor: \"transparent\"\n      }\n    },\n    noLinkVisibility: {\n      textDecoration: \"none\"\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing.unit * 3\n    },\n    menu: {\n      [theme.breakpoints.up(\"sm\")]: {\n        display: \"none\"\n      }\n    }\n  });\n\nconst HomeLink = (props: any) => (\n  <Link style={{ textDecoration: \"none\" }} {...props} to=\"/\" />\n);\nconst ResumeLink = (props: any) => <Link {...props} to=\"/resume\" />;\nconst HomepageLink = (props: any) => (\n  <Link {...props} to=\"/projects/homepage\" />\n);\nconst RCVLink = (props: any) => <Link {...props} to=\"/projects/sf-rcv\" />;\nconst GreenLanesLink = (props: any) => (\n  <Link {...props} to=\"/projects/greenlanes\" />\n);\n\nlet createHandlers = function(dispatch: Function) {\n  let handleMenu = (event: MenuEvent) => {\n    dispatch(openMenu(event.currentTarget));\n  };\n\n  let handleClose = () => {\n    dispatch(closeMenu());\n  };\n\n  return {\n    handleMenu,\n    handleClose\n  };\n};\n\nclass NavBar extends React.Component<Props & RouteComponentProps> {\n  private handlers: any;\n  constructor(props: any) {\n    super(props);\n    this.handlers = createHandlers(this.props.dispatch);\n  }\n\n  render() {\n    const { classes, children, projectMenuAnchor } = this.props;\n\n    const navList = (\n      <div>\n        <List>\n          <ListItem\n            button\n            TouchRippleProps={{ classes: { root: classes.rippleColor } }}\n            key=\"Home\"\n            component={HomeLink}\n            className={classes.darkBlueHover}\n          >\n            <ListItemText\n              classes={{ primary: classes.navText }}\n              primary=\"Home\"\n            />\n          </ListItem>\n          <ListItem\n            button\n            TouchRippleProps={{ classes: { root: classes.rippleColor } }}\n            key=\"Resume\"\n            component={ResumeLink}\n            className={classes.darkBlueHover}\n          >\n            <ListItemText\n              classes={{ primary: classes.navText }}\n              primary=\"Resume\"\n            />\n          </ListItem>\n          <ListItem key=\"Projects\">\n            {\" \"}\n            <ListItemText\n              classes={{ primary: classes.navText }}\n              primary=\"Projects:\"\n            />\n          </ListItem>\n          <ListItem\n            button\n            TouchRippleProps={{ classes: { root: classes.rippleColor } }}\n            key=\"GreenLanes\"\n            component={GreenLanesLink}\n            className={classes.darkBlueHover}\n          >\n            <ListItemText\n              classes={{ primary: classes.navText }}\n              primary=\"-> SF Green Lanes\"\n            />\n          </ListItem>\n          <ListItem\n            button\n            TouchRippleProps={{ classes: { root: classes.rippleColor } }}\n            key=\"SF Vote Diagrams\"\n            component={RCVLink}\n            className={classes.darkBlueHover}\n          >\n            <ListItemText\n              classes={{ primary: classes.navText }}\n              primary=\"-> SF Vote Diagrams\"\n            />\n          </ListItem>\n          <ListItem\n            button\n            TouchRippleProps={{ classes: { root: classes.rippleColor } }}\n            key=\"Homepage\"\n            component={HomepageLink}\n            className={classes.darkBlueHover}\n          >\n            <ListItemText\n              classes={{ primary: classes.navText }}\n              primary=\"-> This Website\"\n            />\n          </ListItem>\n        </List>\n      </div>\n    );\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <Hidden smUp implementation=\"css\">\n          <AppBar position=\"fixed\" className={classes.appBar}>\n            <Toolbar>\n              <Typography\n                variant=\"h6\"\n                color=\"inherit\"\n                noWrap\n                component={HomeLink}\n                className={classes.title}\n              >\n                Ira Kaplan\n              </Typography>\n              <div>\n                <Button\n                  aria-owns={projectMenuAnchor ? \"menu-appbar\" : undefined}\n                  aria-haspopup=\"true\"\n                  onClick={this.handlers.handleMenu}\n                  color=\"inherit\"\n                  classes={{\n                    root: classes.mono,\n                    label: classes.label\n                  }}\n                  TouchRippleProps={{ classes: { root: classes.rippleColor } }}\n                >\n                  Menu\n                </Button>\n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={projectMenuAnchor}\n                  open={Boolean(projectMenuAnchor)}\n                  onClose={this.handlers.handleClose}\n                  className={classes.menu}\n                >\n                  <MenuItem\n                    component={HomeLink}\n                    onClick={this.handlers.handleClose}\n                    className={classes.lightBlueHover}\n                    classes={{ root: classes.mono }}\n                    TouchRippleProps={{\n                      classes: { root: classes.rippleColor }\n                    }}\n                  >\n                    Home\n                  </MenuItem>\n                  <MenuItem\n                    component={ResumeLink}\n                    onClick={this.handlers.handleClose}\n                    className={classes.lightBlueHover}\n                    classes={{ root: classes.mono }}\n                    TouchRippleProps={{\n                      classes: { root: classes.rippleColor }\n                    }}\n                  >\n                    Resume\n                  </MenuItem>\n                  <MenuItem\n                    disableRipple\n                    className={classes.noHover}\n                    classes={{ root: classes.mono }}\n                  >\n                    Projects:\n                  </MenuItem>\n                  <MenuItem\n                    component={GreenLanesLink}\n                    onClick={this.handlers.handleClose}\n                    className={classes.lightBlueHover}\n                    classes={{ root: classes.mono }}\n                    TouchRippleProps={{\n                      classes: { root: classes.rippleColor }\n                    }}\n                  >\n                    -> SF Green Lanes\n                  </MenuItem>\n                  <MenuItem\n                    component={RCVLink}\n                    onClick={this.handlers.handleClose}\n                    className={classes.lightBlueHover}\n                    classes={{ root: classes.mono }}\n                    TouchRippleProps={{\n                      classes: { root: classes.rippleColor }\n                    }}\n                  >\n                    -> SF Vote Diagrams\n                  </MenuItem>\n                  <MenuItem\n                    component={HomepageLink}\n                    onClick={this.handlers.handleClose}\n                    className={classes.lightBlueHover}\n                    classes={{ root: classes.mono }}\n                    TouchRippleProps={{\n                      classes: { root: classes.rippleColor }\n                    }}\n                  >\n                    -> This Website\n                  </MenuItem>\n                </Menu>\n              </div>\n            </Toolbar>\n          </AppBar>\n        </Hidden>\n        <nav className={classes.drawer}>\n          <Hidden xsDown implementation=\"css\">\n            <Drawer\n              classes={{\n                paper: classes.drawerPaper\n              }}\n              variant=\"permanent\"\n              open\n            >\n              <div style={{ padding: \"12px 16px 16px 16px\" }}>\n                <Typography\n                  variant=\"h6\"\n                  classes={{ root: classes.navText }}\n                  component={HomeLink}\n                  noWrap\n                >\n                  Ira Kaplan\n                </Typography>\n              </div>\n              {navList}\n            </Drawer>\n          </Hidden>\n        </nav>\n        <main className={classes.content}>\n          <Hidden smUp implementation=\"css\">\n            <div className={classes.toolbar} />\n          </Hidden>\n          {children}\n        </main>\n      </div>\n    );\n  }\n}\n\n// class NavBar extends React.Component<{\n//   dispatch: any;\n//   classes: any;\n//   projectMenuAnchor: null | HTMLElement;\n// }> {\n//   private handlers: any;\n//   constructor(props: any) {\n//     super(props);\n//     this.handlers = createHandlers(this.props.dispatch);\n//   }\n//   // state = {\n//   //   projectMenuAnchor: null\n//   // };\n//   // store = this.props.store;\n//   // handleMenu = event => {\n//   //   this.setState({ projectMenuAnchor: event.currentTarget });\n//   //   // store.dispatch(openMenu(event.currentTarget));\n//   // };\n\n//   // handleClose = () => {\n//   //   this.setState({ projectMenuAnchor: null });\n//   //   // dispatch({ type: CLOSE_MENU });\n//   // };\n//   render() {\n//     const { classes, projectMenuAnchor } = this.props;\n//     // const { projectMenuAnchor } = this.props;\n\n//     return (\n//       <div className={classes.root}>\n//         <AppBar position=\"fixed\" color=\"default\">\n//           <Toolbar>\n//             <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\n//               Ira Kaplan\n//             </Typography>\n//             <Button component={HomeLink}>Home</Button>\n//             <Button component={ResumeLink}>Resume</Button>\n//             <div>\n//               <Button\n//                 aria-owns={projectMenuAnchor ? \"menu-appbar\" : undefined}\n//                 aria-haspopup=\"true\"\n//                 onClick={this.handlers.handleMenu}\n//                 color=\"inherit\"\n//               >\n//                 Projects\n//               </Button>\n//               <Menu\n//                 id=\"menu-appbar\"\n//                 anchorEl={projectMenuAnchor}\n//                 open={Boolean(projectMenuAnchor)}\n//                 onClose={this.handlers.handleClose}\n//               >\n//                 <MenuItem\n//                   component={GreenLanesLink}\n//                   onClick={this.handlers.handleClose}\n//                 >\n//                   SF Protected Green Lanes\n//                 </MenuItem>\n//                 <MenuItem\n//                   component={RCVLink}\n//                   onClick={this.handlers.handleClose}\n//                 >\n//                   SF Vote Diagrams\n//                 </MenuItem>\n//                 <MenuItem\n//                   component={HomepageLink}\n//                   onClick={this.handlers.handleClose}\n//                 >\n//                   This Website\n//                 </MenuItem>\n//               </Menu>\n//             </div>\n//           </Toolbar>\n//         </AppBar>\n//       </div>\n//     );\n//   }\n// }\n// NavBar.propTypes = {\n//   classes: PropTypes.object.isRequired,\n//   projectMenuAnchor: PropTypes.object\n// };\n\nconst mapStateToProps = (state: ApplicationState) => ({\n  projectMenuAnchor: state.navbar.projectMenuAnchor\n});\n\n// //@ts-ignore\n// export default connect(mapStateToProps)(withStyles(styles)(NavBar));\n\n//@ts-ignore\nexport default withRouter<Props>(\n  connect(mapStateToProps)(withStyles(styles)(NavBar))\n);\n","import { action } from \"typesafe-actions\";\n\nexport const OPEN_MENU = \"OPEN_MENU\";\nexport const CLOSE_MENU = \"CLOSE_MENU\";\n\nexport const openMenu = (anchor: HTMLElement) =>\n  action(OPEN_MENU, {\n    anchor: anchor\n  });\n\nexport const closeMenu = () => action(CLOSE_MENU);\n","import React from \"react\";\n\ntype LoadingComponentType = ({\n  isLoading,\n  error\n}: {\n  isLoading: boolean | null;\n  error: Error | null;\n}) => JSX.Element | null;\n\nconst LoadingComponent: LoadingComponentType = ({ isLoading, error }) => {\n  // Handle the loading state\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n  // Handle the error state\n  else if (error) {\n    return <div>Sorry, there was a problem loading the page.</div>;\n  } else {\n    return null;\n  }\n};\n\nexport { LoadingComponent };\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport Loadable from \"react-loadable\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport { Store } from \"redux\";\nimport { ApplicationState } from \"./store\";\nimport { LoadingComponent } from \"./components/LoadingComponent\";\nimport createTheme from \"./theme\";\nimport { MuiThemeProvider } from \"@material-ui/core\";\n// import ReduxDevTools from \"./components/ReduxDevTools\";\n\nconst theme = createTheme();\n\nconst AsyncHome = Loadable({\n  loader: () => import(\"./pages/home/Home\"),\n  loading: LoadingComponent\n});\nconst AsyncResume = Loadable({\n  loader: () => import(\"./pages/resume/Resume\"),\n  loading: LoadingComponent\n});\nconst AsyncHomepage = Loadable({\n  loader: () => import(\"./pages/projects/homepage/Homepage\"),\n  loading: LoadingComponent\n});\nconst AsyncRCV = Loadable({\n  loader: () => import(\"./pages/projects/sankeyrcv/SankeyRCV\"),\n  loading: LoadingComponent\n});\nconst AsyncGreenLanes = Loadable({\n  loader: () => import(\"./pages/projects/greenlanes/GreenLanes\"),\n  loading: LoadingComponent\n});\n\nclass App extends Component<{ store: Store<ApplicationState> }> {\n  render() {\n    return (\n      <Provider store={this.props.store}>\n        <Router>\n          <MuiThemeProvider theme={theme}>\n            <div className=\"App\">\n              <NavBar>\n                <Switch>\n                  <Route path=\"/\" exact component={AsyncHome} />\n                  <Route path=\"/resume/\" component={AsyncResume} />\n                  <Route path=\"/projects/homepage/\" component={AsyncHomepage} />\n                  <Route path=\"/projects/sf-rcv/\" component={AsyncRCV} />\n                  <Route\n                    path=\"/projects/greenlanes/\"\n                    component={AsyncGreenLanes}\n                  />\n                </Switch>\n              </NavBar>\n              {/* <ReduxDevTools /> */}\n            </div>\n          </MuiThemeProvider>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import createMuiTheme, {\n  ThemeOptions,\n  Theme\n} from \"@material-ui/core/styles/createMuiTheme\";\nimport { Breakpoint } from \"@material-ui/core/styles/createBreakpoints\";\nimport { CSSProperties } from \"@material-ui/core/styles/withStyles\";\n\ndeclare module \"@material-ui/core/styles/createMuiTheme\" {\n  interface Theme {\n    appDrawer: {\n      width: React.CSSProperties[\"width\"];\n      breakpoint: Breakpoint;\n    };\n  }\n\n  // allow configuration using `createMuiTheme`\n  interface ThemeOptions {\n    appDrawer?: {\n      width?: React.CSSProperties[\"width\"];\n      breakpoint?: Breakpoint;\n    };\n  }\n}\n\ndeclare module \"@material-ui/core/styles/createTypography\" {\n  interface Typography {\n    monoFonts: CSSProperties[\"fontFamily\"];\n    sansSerifFonts: CSSProperties[\"fontFamily\"];\n  }\n  interface TypographyOptions {\n    monoFonts?: CSSProperties[\"fontFamily\"];\n    sansSerifFonts?: CSSProperties[\"fontFamily\"];\n  }\n}\n\nexport default function createTheme(options?: ThemeOptions) {\n  let monoFonts: string = [\n    \"Source Code Pro\",\n    \"source-code-pro\",\n    \"Menlo\",\n    \"Monaco\",\n    \"Consolas\",\n    \"Courier New\",\n    \"monospace\"\n  ].join(\",\");\n  let sansSerifFonts: string = [\n    \"Open Sans\",\n    \"-apple-system\",\n    \"BlinkMacSystemFont\",\n    \"Segoe UI\",\n    \"Roboto\",\n    \"Oxygen\",\n    \"Ubuntu\",\n    \"Cantarell\",\n    \"Fira Sans\",\n    \"Droid Sans\",\n    \"Helvetica Neue\",\n    \"sans-serif\"\n  ].join(\",\");\n  return createMuiTheme({\n    appDrawer: {\n      width: 225,\n      breakpoint: \"lg\"\n    },\n    palette: {\n      type: \"light\",\n      primary: {\n        light: \"#494949\",\n        main: \"#222222\",\n        dark: \"#000000\",\n        contrastText: \"#dddddd\"\n      },\n      secondary: {\n        light: \"#64c2f2\",\n        main: \"#2292bf\",\n        dark: \"#00648f\",\n        contrastText: \"#eeeeee\"\n      }\n    },\n    typography: {\n      useNextVariants: true,\n      monoFonts: monoFonts,\n      sansSerifFonts: sansSerifFonts,\n      fontFamily: sansSerifFonts,\n      caption: { fontFamily: sansSerifFonts, textAlign: \"center\" },\n      h1: { fontFamily: monoFonts, textAlign: \"left\" },\n      h2: { fontFamily: monoFonts, textAlign: \"left\" },\n      h3: { fontFamily: monoFonts, textAlign: \"left\" },\n      h4: { fontFamily: monoFonts, textAlign: \"left\" },\n      h5: { fontFamily: monoFonts, textAlign: \"left\" },\n      h6: { fontFamily: monoFonts, textAlign: \"left\" },\n      body1: { fontSize: 16, textAlign: \"left\" /*, color: \"white\" */ },\n      body2: {\n        fontSize: 12,\n        textAlign: \"left\",\n        // color: \"white\",\n        fontStyle: \"italic\"\n      }\n    },\n    ...options\n  });\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Reducer, combineReducers } from \"redux\";\nimport * as actions from \"./actions\";\nimport { ActionType } from \"typesafe-actions\";\n\nexport type AppAction = ActionType<typeof actions>;\n\nexport interface NavBarState {\n  projectMenuAnchor: null | HTMLElement;\n}\n\nconst initialState: NavBarState = {\n  projectMenuAnchor: null\n};\n\nconst navbarReducer: Reducer<NavBarState> = (\n  state: NavBarState = initialState,\n  action: AppAction\n) => {\n  switch (action.type) {\n    case actions.OPEN_MENU:\n      return { ...state, projectMenuAnchor: action.payload.anchor };\n\n    case actions.CLOSE_MENU:\n      return { ...state, projectMenuAnchor: null };\n    default:\n      return state;\n  }\n};\n\nexport interface BasicState {}\n\nconst basicReducer: Reducer<BasicState> = (state = {}, action: AppAction) => {\n  // For now, don't handle any actions\n  // and just return the state given to us.\n  return state;\n};\n\nexport interface ApplicationState {\n  basic: BasicState;\n  navbar: NavBarState;\n}\n\nexport default combineReducers<ApplicationState>({\n  basic: basicReducer,\n  navbar: navbarReducer\n});\n","import { createStore, applyMiddleware, Store } from \"redux\";\n// import thunk from \"redux-thunk\";\n// import api from \"../middleware/api\";\nimport rootReducer, { ApplicationState } from \"../store\";\n\nfunction configureStore(\n  preloadedState?: ApplicationState\n): Store<ApplicationState> {\n  return createStore(rootReducer, preloadedState, applyMiddleware());\n}\n\nexport { configureStore };\n","import React from \"react\";\nimport { createDevTools } from \"redux-devtools\";\nimport LogMonitor from \"redux-devtools-log-monitor\";\nimport DockMonitor from \"redux-devtools-dock-monitor\";\n\nexport default createDevTools(\n  <DockMonitor toggleVisibilityKey=\"ctrl-h\" changePositionKey=\"ctrl-w\">\n    <LogMonitor />\n  </DockMonitor>\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { configureStore } from \"./store/configureStore\";\n\nconst store = configureStore.configureStore();\n\nReactDOM.render(<App store={store} />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","import * as prod from \"./configureStore.prod\";\nimport * as dev from \"./configureStore.dev\";\nimport { ApplicationState } from \"../store\";\nimport { Store, AnyAction } from \"redux\";\n\ntype configureStoreType = {\n  configureStore: (\n    preloadedState?: ApplicationState | undefined\n  ) => Store<ApplicationState, AnyAction>;\n};\n\nlet configureStore: configureStoreType;\nif (process.env.NODE_ENV === \"production\") {\n  configureStore = prod;\n} else {\n  configureStore = dev;\n}\n\nexport { configureStore };\n"],"sourceRoot":""}